var _elm_lang$elm_architecture_tutorial$Main$myStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'height', _1: '40px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 0'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'font-size', _1: '2em'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _elm_lang$elm_architecture_tutorial$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		return _elm_lang$core$Native_Utils.update(
			model,
			{content: _p0._0});
	});
var _elm_lang$elm_architecture_tutorial$Main$model = {content: ''};
var _elm_lang$elm_architecture_tutorial$Main$Model = function (a) {
	return {content: a};
};
var _elm_lang$elm_architecture_tutorial$Main$Change = function (a) {
	return {ctor: 'Change', _0: a};
};
var _elm_lang$elm_architecture_tutorial$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$placeholder('Text to reverse'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(_elm_lang$elm_architecture_tutorial$Main$Change),
						_1: {
							ctor: '::',
							_0: _elm_lang$elm_architecture_tutorial$Main$myStyle,
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$elm_architecture_tutorial$Main$myStyle,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$String$reverse(model.content)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _elm_lang$elm_architecture_tutorial$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _elm_lang$elm_architecture_tutorial$Main$model, view: _elm_lang$elm_architecture_tutorial$Main$view, update: _elm_lang$elm_architecture_tutorial$Main$update})();
